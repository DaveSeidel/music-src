<blueData version='2.6.0'>
  <projectProperties>
    <title>~60Hz / Variation</title>
    <author>Dave Seidel</author>
    <notes></notes>
    <sampleRate>48000</sampleRate>
    <ksmps>1</ksmps>
    <channels>2</channels>
    <useZeroDbFS>true</useZeroDbFS>
    <zeroDbFS>1</zeroDbFS>
    <diskSampleRate>96000</diskSampleRate>
    <diskKsmps>1</diskKsmps>
    <diskChannels>2</diskChannels>
    <diskUseZeroDbFS>true</diskUseZeroDbFS>
    <diskZeroDbFS>1</diskZeroDbFS>
    <useAudioOut>true</useAudioOut>
    <useAudioIn>false</useAudioIn>
    <useMidiIn>false</useMidiIn>
    <useMidiOut>false</useMidiOut>
    <noteAmpsEnabled>true</noteAmpsEnabled>
    <outOfRangeEnabled>true</outOfRangeEnabled>
    <warningsEnabled>true</warningsEnabled>
    <benchmarkEnabled>true</benchmarkEnabled>
    <advancedSettings></advancedSettings>
    <completeOverride>false</completeOverride>
    <fileName>/home/dave/work/60hz/60hz-variation-dry.wav</fileName>
    <askOnRender>false</askOnRender>
    <diskNoteAmpsEnabled>true</diskNoteAmpsEnabled>
    <diskOutOfRangeEnabled>true</diskOutOfRangeEnabled>
    <diskWarningsEnabled>true</diskWarningsEnabled>
    <diskBenchmarkEnabled>true</diskBenchmarkEnabled>
    <diskAdvancedSettings></diskAdvancedSettings>
    <diskCompleteOverride>false</diskCompleteOverride>
    <diskAlwaysRenderEntireProject>false</diskAlwaysRenderEntireProject>
  </projectProperties>
  <arrangement>
    <instrumentAssignment arrangementId='1' isEnabled='true'>
      <instrument type='blue.orchestra.GenericInstrument'>
        <name>binaural beater - gkdiff</name>
        <comment></comment>
        <globalOrc></globalOrc>
        <globalSco></globalSco>
        <instrumentText>idur  = p3          ; duration
iamp  = ampdb(p4)/2 ; amplitude
icent = p5          ; center frequency (Hz)
idiff = p6          ; difference (Hz)
itab  = p7          ; waveform (table)
irise = p8          ; envelope rise time
ifall = p9          ; envelope fall time

; amplitude envelope
;ke	linen	iamp, irise, idur, ifall
;idur = idur - (irise + ifall)
ae  expsega  0.001, idur*irise, 1, idur*(1.0-(irise+ifall)), 1, idur*ifall, 0.001

; determine pitches
kdiff	=	idiff * gkdiff
kp1	=	icent + (kdiff/2)
kp2	=	icent - (kdiff/2)

	printks	&quot;center=%f beat=%f =&gt; freq1=%f freq2=%f\\n&quot;, 1000, icent, idiff, kp1, kp2

; generate tones
asig1	poscil3	ae*iamp, kp1, itab
asig2	poscil3	ae*iamp, kp2, itab

; output
blueMixerOut	asig1, asig2
</instrumentText>
        <opcodeList/>
      </instrument>
    </instrumentAssignment>
  </arrangement>
  <mixer>
    <enabled>true</enabled>
    <extraRenderTime>2.0</extraRenderTime>
    <channelList listName='Orchestra' list='channels'>
      <channel>
        <name>1</name>
        <outChannel>Master</outChannel>
        <level>0.0</level>
        <muted>false</muted>
        <solo>false</solo>
        <effectsChain bin='pre'/>
        <effectsChain bin='post'/>
        <parameter uniqueId='1492022585' name='Volume' label='dB' min='-96.0' max='12.0' resolution='-1.0' automationEnabled='false' value='0.0'>
          <line name='' version='2' max='12.0' min='-96.0' resolution='-1.0' color='-8355712' rightBound='false' endPointsLinked='false'>
            <linePoint x='0.0' y='0.0'/>
          </line>
        </parameter>
      </channel>
    </channelList>
    <channelList listName='SubChannels' list='subChannels'>
      <channel>
        <name>SubChannel1</name>
        <outChannel>Master</outChannel>
        <level>-23.0</level>
        <muted>false</muted>
        <solo>false</solo>
        <effectsChain bin='pre'/>
        <effectsChain bin='post'/>
        <parameter uniqueId='-1522353829' name='Volume' label='dB' min='-96.0' max='12.0' resolution='-1.0' automationEnabled='false' value='-23.0'>
          <line name='' version='2' max='12.0' min='-96.0' resolution='-1.0' color='-8355712' rightBound='false' endPointsLinked='false'>
            <linePoint x='0.0' y='-23.0'/>
          </line>
        </parameter>
      </channel>
    </channelList>
    <channel>
      <name>Master</name>
      <outChannel>Master</outChannel>
      <level>0.0</level>
      <muted>false</muted>
      <solo>false</solo>
      <effectsChain bin='pre'>
        <effect>
          <name>PConvolve</name>
          <enabled>false</enabled>
          <numIns>2</numIns>
          <numOuts>2</numOuts>
          <code>iwet = &lt;wetDry&gt;
idry = 1 - iwet

; size of each convolution partion -- for best performance, this parameter needs to be tweaked
ipartitionsize = &lt;paritionSize&gt;

; calculate latency of pconvolve opcode
idel    = (ksmps &lt; ipartitionsize ? ipartitionsize + ksmps : ipartitionsize)/sr

prints &quot;Convolving with a latency of %f seconds%n&quot;, idel

awetl, awetr pconvolve    iwet*(ain1+ain2), &quot;&lt;impulseResponse&gt;&quot;, ipartitionsize

; Delay dry signal, to align it with the convoled sig
adryl        delay  idry * ain1, idel
adryr        delay  idry * ain2, idel

aout1 = adryl+awetl
aout2 = adryr+awetr</code>
          <comments>Convolution Effect using pconvolve opcode by Matt Ingalls

The code for this effect is based on code by Matt Ingalls found in the Csound Manual; please see the manual for more information regarding pconvolve.</comments>
          <opcodeList/>
          <graphicInterface editEnabled='true'>
            <gridSettings>
              <width>15</width>
              <height>15</height>
              <gridStyle>NONE</gridStyle>
              <snapGridEnabled>false</snapGridEnabled>
            </gridSettings>
            <bsbObject type='blue.orchestra.blueSynthBuilder.BSBLabel'>
              <objectName></objectName>
              <x>3</x>
              <y>6</y>
              <label>&lt;html&gt;&lt;font size=&quot;+1&quot;&gt;PConvolve&lt;/font&gt;&lt;/html&gt;</label>
            </bsbObject>
            <bsbObject type='blue.orchestra.blueSynthBuilder.BSBLabel'>
              <objectName></objectName>
              <x>13</x>
              <y>43</y>
              <label>Impulse Response</label>
            </bsbObject>
            <bsbObject type='blue.orchestra.blueSynthBuilder.BSBLabel'>
              <objectName></objectName>
              <x>43</x>
              <y>76</y>
              <label>Partition Size</label>
            </bsbObject>
            <bsbObject type='blue.orchestra.blueSynthBuilder.BSBFileSelector'>
              <objectName>impulseResponse</objectName>
              <x>130</x>
              <y>32</y>
              <fileName>minster1_000_ortf_96k.wav</fileName>
              <textFieldWidth>300</textFieldWidth>
              <stringChannelEnabled>false</stringChannelEnabled>
            </bsbObject>
            <bsbObject type='blue.orchestra.blueSynthBuilder.BSBDropdown'>
              <objectName>paritionSize</objectName>
              <x>130</x>
              <y>73</y>
              <automationAllowed>false</automationAllowed>
              <bsbDropdownItemList>
                <bsbDropdownItem uniqueId='1064032969'>
                  <name>1</name>
                  <value>1</value>
                </bsbDropdownItem>
                <bsbDropdownItem uniqueId='1064032970'>
                  <name>2</name>
                  <value>2</value>
                </bsbDropdownItem>
                <bsbDropdownItem uniqueId='1064032971'>
                  <name>4</name>
                  <value>4</value>
                </bsbDropdownItem>
                <bsbDropdownItem uniqueId='1064032972'>
                  <name>8</name>
                  <value>8</value>
                </bsbDropdownItem>
                <bsbDropdownItem uniqueId='1064032973'>
                  <name>16</name>
                  <value>16</value>
                </bsbDropdownItem>
                <bsbDropdownItem uniqueId='1064032974'>
                  <name>32</name>
                  <value>32</value>
                </bsbDropdownItem>
                <bsbDropdownItem uniqueId='1064032975'>
                  <name>64</name>
                  <value>64</value>
                </bsbDropdownItem>
                <bsbDropdownItem uniqueId='1064032976'>
                  <name>128</name>
                  <value>128</value>
                </bsbDropdownItem>
                <bsbDropdownItem uniqueId='1064032977'>
                  <name>256</name>
                  <value>256</value>
                </bsbDropdownItem>
                <bsbDropdownItem uniqueId='1064032978'>
                  <name>512</name>
                  <value>512</value>
                </bsbDropdownItem>
                <bsbDropdownItem uniqueId='1064032979'>
                  <name>1024</name>
                  <value>1024</value>
                </bsbDropdownItem>
                <bsbDropdownItem uniqueId='1064032980'>
                  <name>2048</name>
                  <value>2048</value>
                </bsbDropdownItem>
                <bsbDropdownItem uniqueId='1064032981'>
                  <name>4096</name>
                  <value>4096</value>
                </bsbDropdownItem>
                <bsbDropdownItem uniqueId='1064032982'>
                  <name>8192</name>
                  <value>8192</value>
                </bsbDropdownItem>
                <bsbDropdownItem uniqueId='1064032983'>
                  <name>16384</name>
                  <value>16384</value>
                </bsbDropdownItem>
                <bsbDropdownItem uniqueId='1064032984'>
                  <name>32768</name>
                  <value>32768</value>
                </bsbDropdownItem>
                <bsbDropdownItem uniqueId='1064032985'>
                  <name>65536</name>
                  <value>65536</value>
                </bsbDropdownItem>
              </bsbDropdownItemList>
              <selectedIndex>14</selectedIndex>
              <randomizable>true</randomizable>
            </bsbObject>
            <bsbObject type='blue.orchestra.blueSynthBuilder.BSBLabel'>
              <objectName></objectName>
              <x>46</x>
              <y>110</y>
              <label>Wet/Dry Mix</label>
            </bsbObject>
            <bsbObject type='blue.orchestra.blueSynthBuilder.BSBHSlider'>
              <objectName>wetDry</objectName>
              <x>129</x>
              <y>105</y>
              <automationAllowed>false</automationAllowed>
              <minimum>0.0</minimum>
              <maximum>1.0</maximum>
              <resolution>0.01</resolution>
              <value>0.4</value>
              <sliderWidth>280</sliderWidth>
              <randomizable>true</randomizable>
            </bsbObject>
            <bsbObject type='blue.orchestra.blueSynthBuilder.BSBLabel'>
              <objectName></objectName>
              <x>380</x>
              <y>130</y>
              <label>Wet</label>
            </bsbObject>
            <bsbObject type='blue.orchestra.blueSynthBuilder.BSBLabel'>
              <objectName></objectName>
              <x>136</x>
              <y>130</y>
              <label>Dry</label>
            </bsbObject>
          </graphicInterface>
          <bsbParameterList/>
        </effect>
      </effectsChain>
      <effectsChain bin='post'/>
      <parameter uniqueId='1064032873' name='Volume' label='dB' min='-96.0' max='12.0' resolution='-1.0' automationEnabled='false' value='0.0'>
        <line name='' version='2' max='12.0' min='-96.0' resolution='-1.0' color='-8355712' rightBound='false' endPointsLinked='false'>
          <linePoint x='0.0' y='0.0'/>
        </line>
      </parameter>
    </channel>
  </mixer>
  <tables></tables>
  <soundObjectLibrary/>
  <globalOrcSco>
    <globalOrc>gkdiff  init	1

giTblSz	init	2097152+1

; sine wave
giFn1 	ftgen	1, 0, giTblSz, 10, 1

</globalOrc>
    <globalSco>t 0 15
</globalSco>
  </globalOrcSco>
  <opcodeList>
    <udo>
      <opcodeName>pan_equal_power</opcodeName>
      <outTypes>aa</outTypes>
      <inTypes>ak</inTypes>
      <codeBody>ain, kpan	xin
kangl		= 	1.57079633 * (kpan + 0.5)
		xout	ain*sin(kangl), ain*cos(kangl)
</codeBody>
      <comments></comments>
    </udo>
  </opcodeList>
  <liveData>
    <commandLine>csound -Wdo devaudio -L stdin</commandLine>
    <commandLineEnabled>false</commandLineEnabled>
    <commandLineOverride>false</commandLineOverride>
    <liveObjectBins columns='1' rows='8'>
      <bin>
        <null/>
        <null/>
        <null/>
        <null/>
        <null/>
        <null/>
        <null/>
        <null/>
      </bin>
    </liveObjectBins>
    <liveObjectSetList/>
    <repeat>4</repeat>
    <tempo>60</tempo>
    <repeatEnabled>false</repeatEnabled>
  </liveData>
  <score>
    <tempo>
      <enabled>false</enabled>
      <visible>false</visible>
      <line name='' version='2' max='240.0' min='30.0' resolution='-1.0' color='-8355712' rightBound='false' endPointsLinked='false'>
        <linePoint x='0.0' y='60.0'/>
      </line>
    </tempo>
    <timeState>
      <pixelSecond>10</pixelSecond>
      <snapEnabled>true</snapEnabled>
      <snapValue>1.0</snapValue>
      <timeDisplay>1</timeDisplay>
      <timeUnit>5</timeUnit>
    </timeState>
    <noteProcessorChain/>
    <soundObject type='blue.soundObject.PolyObject'>
      <subjectiveDuration>2.0</subjectiveDuration>
      <startTime>0.0</startTime>
      <name>root</name>
      <backgroundColor>-10066279</backgroundColor>
      <timeBehavior>2</timeBehavior>
      <noteProcessorChain/>
      <defaultHeightIndex>0</defaultHeightIndex>
      <timeState>
        <pixelSecond>64</pixelSecond>
        <snapEnabled>false</snapEnabled>
        <snapValue>1.0</snapValue>
        <timeDisplay>0</timeDisplay>
        <timeUnit>5</timeUnit>
      </timeState>
      <soundLayer name='' muted='false' solo='false' heightIndex='0'>
        <noteProcessorChain/>
        <soundObject type='blue.soundObject.PythonObject' onLoadProcessable='false'>
          <subjectiveDuration>10.0</subjectiveDuration>
          <startTime>0.0</startTime>
          <name>code</name>
          <backgroundColor>-12566464</backgroundColor>
          <timeBehavior>0</timeBehavior>
          <noteProcessorChain/>
          <pythonCode>Base = 120

Phi = 1.618

Sine = 1

AMP  = -14
TABLE = Sine
RISE = 0.005
FALL = 0.015
PAN = 0

&quot;&quot;&quot;
idur	=	p3		; duration
iamp	=	ampdb(p4)/2	; amplitude
icent	=	p5		; center frequency (Hz)
idiff	=	p6		; difference (Hz)
itab	=       p7		; function table number (waveform)
irise 	=	p8		; envelope rise time
ifall	=	p9		; envelope fall time
&quot;&quot;&quot;

def binaural(center, diff, amp=AMP, table=TABLE, rise=RISE, fall=FALL):
  return &quot;i1 0 1 %f %f %f %d %f %f\n&quot; % (amp, center, diff, table, rise, fall)

def binaural_ratio(ratio, octave, diff, amp=AMP, table=TABLE, rise=RISE, fall=FALL):
  pitch = (Base*ratio)*2**octave
  diff *= ratio
  return binaural(pitch, diff, amp, table, rise, fall)

def binaural_index(index, octave, diff, amp=AMP, table=TABLE, rise=RISE, fall=FALL):
  return binaural_ratio(T[index], octave, diff, amp, table, rise, fall)

# Tones: main pitch set
T = [
  1,
  9.0/8.0,
  5.0/4.0,
  11.0/8.0,
  23.0/16.0,
  3.0/2.0,
  13.0/8.0,
  7.0/4.0,
  31.0/16.0
]

# Derived: secondary pitch set
D = [
  1,
  31.0/30.0,
  16.0/15.0,
  7.0/6.0,
  13.0/10.0,
  4.0/3.0,
  22.0/15.0,
  23.0/15.0,
  8.0/5.0,
  5.0/3.0,
  9.0/5.0,
]

# dyads from D, indexed by tones from T
# [0] and [5] are null - not using those slots
Dyads = [
  (0,0),
  (D[8], D[10]),
  (D[5], D[9]),
  (D[2], D[7]),
  (D[2], D[6]),
  (0,0),
  (D[4], D[8]),
  (D[3], D[5]),
  (D[1], D[2]),
]

&quot;&quot;&quot;
idur	=	p3				; duration
iamp	=	ampdb(p4)			; amplitude
ifn	=	p5				; function table number
ifreq	=	p6
ipan	=	p7				; -1 to 1
irise	=	p8
ifall	=	p9

i1 0 1 -10 2 30 0 2 2
&quot;&quot;&quot;

def tone(index, octave, table=TABLE, pan=PAN, amp=AMP, rise=RISE, fall=FALL):
  return &quot;i4 0 1 %f %d %f %f %f %f\n&quot; % (amp, table, (Base*T[index]) * 2**octave, pan, rise, fall)

def dyad(index, octave, table=TABLE, pan=PAN, amp=AMP, rise=RISE, fall=FALL):

  if pan==PAN:
    left  = -0.4
    right =  0.4
  else:
    left = right = pan

  s = &quot;&quot;
  s += &quot;i4 0 1 %f %d %f %f %f %f\n&quot; % (amp, table, (Base*Dyads[index][0]) * 2**octave, left, rise, fall)
  s += &quot;i4 0 1 %f %d %f %f %f %f\n&quot; % (amp, table, (Base*Dyads[index][1]) * 2**octave, right, rise, fall)

  return s

&quot;&quot;&quot;
idur	=       p3
iamp	=       ampdb(p4)/8
ipan	=	p5
irise	=	p6
ifall	=	p7
ifn	=       p8
kpch1	=	p9
kmmm	=	p10
knnn	=	p11
&quot;&quot;&quot;

def combo(base, num, den, table=TABLE, pan=PAN, amp=AMP, rise=RISE, fall=FALL):
  return &quot;i3 0 1 %f %f %f %f %d %f %f %f\n&quot; % (amp, pan, rise, fall, table, base, num, den)

def tone_combo(index, octave, table=TABLE, pan=PAN, amp=AMP, rise=RISE, fall=FALL):
  return combo(Base*2**octave, D[index], 1, table, pan, amp, rise, fall)

def dyad_combo(index, octave, table=TABLE, pan=PAN, amp=AMP, rise=RISE, fall=FALL):
  s = &quot;&quot;
  start = (Base*T[index]) * 2**octave
  #s += tone(index, table, octave, pan, amp-3, rise, fall)
  #s += dyad(index, table, octave, pan, amp-2, rise, fall)
  s += combo(start, Dyads[index][0], 1, table,  0.3, amp, rise, fall)
  s += combo(start, Dyads[index][1], 1, table, -0.3, amp, rise, fall)
  #s += combo((Base*Dyads[index][0]) * 2**octave, T[index], 1, table, 0, amp, rise, fall)
  return s
</pythonCode>
        </soundObject>
      </soundLayer>
      <soundLayer name='' muted='false' solo='false' heightIndex='0'>
        <noteProcessorChain/>
        <soundObject type='blue.soundObject.PythonObject' onLoadProcessable='false'>
          <subjectiveDuration>130.0</subjectiveDuration>
          <startTime>51.0</startTime>
          <name>15</name>
          <backgroundColor>-12566464</backgroundColor>
          <timeBehavior>0</timeBehavior>
          <noteProcessorChain/>
          <pythonCode>score = binaural(Base, 15)
</pythonCode>
        </soundObject>
        <soundObject type='blue.soundObject.PythonObject' onLoadProcessable='false'>
          <subjectiveDuration>200.0</subjectiveDuration>
          <startTime>61.0</startTime>
          <name>0.234375</name>
          <backgroundColor>-12566464</backgroundColor>
          <timeBehavior>0</timeBehavior>
          <noteProcessorChain/>
          <pythonCode>score = binaural(Base, 0.234375)
</pythonCode>
        </soundObject>
      </soundLayer>
      <soundLayer name='' muted='false' solo='false' heightIndex='0'>
        <noteProcessorChain/>
        <soundObject type='blue.soundObject.PythonObject' onLoadProcessable='false'>
          <subjectiveDuration>36.0</subjectiveDuration>
          <startTime>35.0</startTime>
          <name>7.5</name>
          <backgroundColor>-12566464</backgroundColor>
          <timeBehavior>0</timeBehavior>
          <noteProcessorChain/>
          <pythonCode>score = binaural(Base, 7.5)
</pythonCode>
        </soundObject>
        <soundObject type='blue.soundObject.PythonObject' onLoadProcessable='false'>
          <subjectiveDuration>190.0</subjectiveDuration>
          <startTime>71.0</startTime>
          <name>0.234375</name>
          <backgroundColor>-12566464</backgroundColor>
          <timeBehavior>0</timeBehavior>
          <noteProcessorChain/>
          <pythonCode>score = binaural(Base, 0.234375)
</pythonCode>
        </soundObject>
      </soundLayer>
      <soundLayer name='' muted='false' solo='false' heightIndex='0'>
        <noteProcessorChain/>
        <soundObject type='blue.soundObject.PythonObject' onLoadProcessable='false'>
          <subjectiveDuration>56.0</subjectiveDuration>
          <startTime>25.0</startTime>
          <name>3.75</name>
          <backgroundColor>-12566464</backgroundColor>
          <timeBehavior>0</timeBehavior>
          <noteProcessorChain/>
          <pythonCode>score = binaural(Base, 3.75)
</pythonCode>
        </soundObject>
        <soundObject type='blue.soundObject.PythonObject' onLoadProcessable='false'>
          <subjectiveDuration>180.0</subjectiveDuration>
          <startTime>81.0</startTime>
          <name>0.234375</name>
          <backgroundColor>-12566464</backgroundColor>
          <timeBehavior>0</timeBehavior>
          <noteProcessorChain/>
          <pythonCode>score = binaural(Base, 0.234375)
</pythonCode>
        </soundObject>
      </soundLayer>
      <soundLayer name='' muted='false' solo='false' heightIndex='0'>
        <noteProcessorChain/>
        <soundObject type='blue.soundObject.PythonObject' onLoadProcessable='false'>
          <subjectiveDuration>82.0</subjectiveDuration>
          <startTime>19.0</startTime>
          <name>1.875</name>
          <backgroundColor>-12566464</backgroundColor>
          <timeBehavior>0</timeBehavior>
          <noteProcessorChain/>
          <pythonCode>score = binaural(Base, 1.875)
</pythonCode>
        </soundObject>
        <soundObject type='blue.soundObject.PythonObject' onLoadProcessable='false'>
          <subjectiveDuration>160.0</subjectiveDuration>
          <startTime>101.0</startTime>
          <name>0.234375</name>
          <backgroundColor>-12566464</backgroundColor>
          <timeBehavior>0</timeBehavior>
          <noteProcessorChain/>
          <pythonCode>score = binaural(Base, 0.234375)
</pythonCode>
        </soundObject>
      </soundLayer>
      <soundLayer name='' muted='false' solo='false' heightIndex='0'>
        <noteProcessorChain/>
        <soundObject type='blue.soundObject.PythonObject' onLoadProcessable='false'>
          <subjectiveDuration>116.0</subjectiveDuration>
          <startTime>15.0</startTime>
          <name>0.9375</name>
          <backgroundColor>-12566464</backgroundColor>
          <timeBehavior>0</timeBehavior>
          <noteProcessorChain/>
          <pythonCode>score = binaural(Base, 0.9375)
</pythonCode>
        </soundObject>
        <soundObject type='blue.soundObject.PythonObject' onLoadProcessable='false'>
          <subjectiveDuration>130.0</subjectiveDuration>
          <startTime>131.0</startTime>
          <name>0.234375</name>
          <backgroundColor>-12566464</backgroundColor>
          <timeBehavior>0</timeBehavior>
          <noteProcessorChain/>
          <pythonCode>score = binaural(Base, 0.234375)
</pythonCode>
        </soundObject>
      </soundLayer>
      <soundLayer name='' muted='false' solo='false' heightIndex='0'>
        <noteProcessorChain/>
        <soundObject type='blue.soundObject.PythonObject' onLoadProcessable='false'>
          <subjectiveDuration>168.0</subjectiveDuration>
          <startTime>13.0</startTime>
          <name>0.46875</name>
          <backgroundColor>-12566464</backgroundColor>
          <timeBehavior>0</timeBehavior>
          <noteProcessorChain/>
          <pythonCode>score = binaural(Base, 0.46875)
</pythonCode>
        </soundObject>
        <soundObject type='blue.soundObject.PythonObject' onLoadProcessable='false'>
          <subjectiveDuration>100.0</subjectiveDuration>
          <startTime>161.0</startTime>
          <name></name>
          <backgroundColor>-12566464</backgroundColor>
          <timeBehavior>0</timeBehavior>
          <noteProcessorChain/>
          <pythonCode>score = binaural(Base, 0.234375)
</pythonCode>
        </soundObject>
      </soundLayer>
      <soundLayer name='' muted='false' solo='false' heightIndex='0'>
        <noteProcessorChain/>
        <soundObject type='blue.soundObject.PythonObject' onLoadProcessable='false'>
          <subjectiveDuration>210.0</subjectiveDuration>
          <startTime>51.0</startTime>
          <name>0.234375</name>
          <backgroundColor>-12566464</backgroundColor>
          <timeBehavior>0</timeBehavior>
          <noteProcessorChain/>
          <pythonCode>score = binaural(Base, 0.234375)
</pythonCode>
        </soundObject>
      </soundLayer>
      <soundLayer name='' muted='false' solo='false' heightIndex='0'>
        <noteProcessorChain/>
        <soundObject type='blue.soundObject.PythonObject' onLoadProcessable='false'>
          <subjectiveDuration>229.0</subjectiveDuration>
          <startTime>8.0</startTime>
          <name>1.618</name>
          <backgroundColor>-12566464</backgroundColor>
          <timeBehavior>0</timeBehavior>
          <noteProcessorChain/>
          <pythonCode>score = binaural(Base, 1.618)
</pythonCode>
        </soundObject>
      </soundLayer>
      <soundLayer name='' muted='false' solo='false' heightIndex='0'>
        <noteProcessorChain/>
        <soundObject type='blue.soundObject.PythonObject' onLoadProcessable='false'>
          <subjectiveDuration>251.0</subjectiveDuration>
          <startTime>0.0</startTime>
          <name>0.618</name>
          <backgroundColor>-12566464</backgroundColor>
          <timeBehavior>0</timeBehavior>
          <noteProcessorChain/>
          <pythonCode>score = binaural(Base, 0.618)
</pythonCode>
        </soundObject>
      </soundLayer>
      <soundLayer name='' muted='false' solo='false' heightIndex='0'>
        <noteProcessorChain/>
        <soundObject type='blue.soundObject.PythonObject' onLoadProcessable='false'>
          <subjectiveDuration>70.0</subjectiveDuration>
          <startTime>201.0</startTime>
          <name>0</name>
          <backgroundColor>-12566464</backgroundColor>
          <timeBehavior>0</timeBehavior>
          <noteProcessorChain/>
          <pythonCode>score = binaural(Base/2, 0.0, AMP+1, TABLE, 0.25)</pythonCode>
        </soundObject>
      </soundLayer>
    </soundObject>
  </score>
  <scratchPadData>
    <isWordWrapEnabled>true</isWordWrapEnabled>
    <scratchText/>
  </scratchPadData>
  <noteProcessorChainMap/>
  <renderStartTime>0.0</renderStartTime>
  <renderEndTime>-1.0</renderEndTime>
  <markersList/>
  <loopRendering>false</loopRendering>
  <midiInputProcessor>
    <keyMapping>PCH</keyMapping>
    <velMapping>MIDI</velMapping>
    <pitchConstant/>
    <ampConstant/>
    <scale>
      <scaleName>12TET</scaleName>
      <baseFrequency>261.62558</baseFrequency>
      <octave>2.0</octave>
      <ratios>
        <ratio>1.0</ratio>
        <ratio>1.0594631</ratio>
        <ratio>1.122462</ratio>
        <ratio>1.1892071</ratio>
        <ratio>1.2599211</ratio>
        <ratio>1.3348398</ratio>
        <ratio>1.4142135</ratio>
        <ratio>1.4983071</ratio>
        <ratio>1.587401</ratio>
        <ratio>1.6817929</ratio>
        <ratio>1.7817974</ratio>
        <ratio>1.8877486</ratio>
      </ratios>
    </scale>
  </midiInputProcessor>
</blueData>